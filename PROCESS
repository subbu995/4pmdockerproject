DOCKER FILE	: To create image by automation.
DOCKER COMPOSE	: To create multiple containers on single server.
DOCKER SWARM	: To create multiple containers on Multiple server.
DOCKE STACK	: Docker swarm + Docker compose

1. CREATE 3 SERVERS AND INSTALL DOCKER ON ALL OF THEM & CREATE CLUSTER OF IT

yum install docker -y
systemctl start docker
systemctl status docker
docker swarm init --advertise-addr 172.31.85.110
docker node ls


2. INSTALLING JENKINS (MASTER)

sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
amazon-linux-extras install java-openjdk11 -y 
yum install git maven jenkins -y
systemctl start jenkins.service
systemctl status jenkins.service


3. CREATE CUSTOM IMAGES AND PUSH TO DOCKERHUB WITH TAGS

DOCKER FILE:
FROM ubuntu
RUN apt-get update -y
RUN apt-get install apache2 -y
COPY index.html /var/www/html/
CMD ["/usr/sbin/apachectl", "-D", "FOREGROUND"]

INDEX.HTML:


PIPELINE:

pipeline {
    agent any 
    
    stages {
        stage('checkout') {
            steps {
                git 'https://github.com/RAHAMSHAIK007/dockernewproject.git'
            }
        }
        stage('build') {
            steps {
                sh 'docker build -t $img .'
            }
        }
        stage('tag') {
            steps {
                sh 'docker tag $img $repo'
            }
        }
        stage('push') {
            steps {
                sh 'docker login -u  -p '
                sh 'docker push $repo'
            }
        }
    }
}

4. GIVE PERMISSIONS

chmod 777 /var/run/docker.sock
systemctl daemon-reload
systemctl restart docker.service

5. COMPOSE FILE
        vim docker-compose.yml
version: '3'
services:
  movies:
    image: siva995912345/movies
    ports:
      - "80:80"
    deploy:
      replicas: 3

  train:
    image: siva995912345/trains
    ports:
      - "81:80"
    deploy:
      replicas: 3

  dth:
    image: siva995912345/dth
    ports:
      - "82:80"
    deploy:
      replicas: 3

  recharge:
    image: siva995912345/recharge
    ports:
      - "83:80"
    deploy:
      replicas: 3

6. STACK:
jenkins->new item->name:.......->pipeline->ok
SENTAK:
pipeline {
    agent any 
    
    stages {
        stage('Hello') {
            steps {
                git 'https://github.com/subbu995/4pmdockerproject.git'
            }
        }
        stage('stack') {
            steps {
                sh 'docker stack  deploy -c docker-compose.yml siva'
            }
        }
    }
}

docker stack deploy -c docker-compose.yml raham

7. HISTORY:

  1  vim docker-compose.yml
    2  docker node ls
    3  docker stack ls
    4  docker service ls
    5  docker service ps raham_dth
    6  docker service ps raham_movies
    7  curl -L https://downloads.portainer.io/ce2-16/portainer-agent-stack.yml -o portainer-agent-stack.yml
    8  ll
    9  vim portainer-agent-stack.yml
   10  ll
   11  docker stack deploy -c portainer-agent-stack.yml portainer
   12  docker stack ls
   13  docker ps
   14  docker ps -a
   15  docker stack ls
   16  docker service ls
   17  docker volume ls
   18  docker images
   19  docker network ls
   20  cat docker-compose.yml
   21  history
